diff --git a/.gitignore b/.gitignore
index 11b6e9c..3b77a89 100644
--- a/.gitignore
+++ b/.gitignore
@@ -1,3 +1,4 @@
+rsm_csv_files/
 .idea/
 *.pyc
 /staticfiles/
diff --git a/evaluation_registry/evaluations/admin.py b/evaluation_registry/evaluations/admin.py
index 3233d73..1d38f45 100644
--- a/evaluation_registry/evaluations/admin.py
+++ b/evaluation_registry/evaluations/admin.py
@@ -1,9 +1,12 @@
+import datetime
+
 from django.contrib import admin
 from django.contrib.postgres.search import (
     SearchQuery,
     SearchRank,
     SearchVector,
 )
+from django.core.management import call_command
 
 from . import models
 from .models import (
@@ -17,6 +20,25 @@ from .models import (
 admin_site = admin.AdminSite()
 
 
+def import_csv(modeladmin, request, queryset):
+    if queryset.count() > 1:
+        modeladmin.message_user(request, "Please select exactly one file to import.", level="ERROR")
+        return
+
+    file = queryset.first()
+    call_command("load_rsm_csv", file.csv.file)
+    file.last_successfully_loaded_at = datetime.datetime.now()
+    file.save()
+
+
+import_csv.short_description = "Import selected CSV file"
+
+
+class RSMFileAdmin(admin.ModelAdmin):
+    actions = [import_csv]
+    list_display = ["id", "csv", "last_successfully_loaded_at"]
+
+
 class EventDateInline(admin.TabularInline):
     model = EventDate
     extra = 0
@@ -72,4 +94,5 @@ class EvaluationDesignTypeAdmin(admin.ModelAdmin):
 admin.site.register(models.Evaluation, EvaluationAdmin)
 admin.site.register(models.Department, DepartmentAdmin)
 admin.site.register(models.EvaluationDesignType, EvaluationDesignTypeAdmin)
+admin.site.register(models.RSMFile, RSMFileAdmin)
 admin.site.register(models.User)
diff --git a/evaluation_registry/evaluations/management/commands/load_rsm_csv.py b/evaluation_registry/evaluations/management/commands/load_rsm_csv.py
index 3662161..3cda726 100644
--- a/evaluation_registry/evaluations/management/commands/load_rsm_csv.py
+++ b/evaluation_registry/evaluations/management/commands/load_rsm_csv.py
@@ -4,7 +4,9 @@
 import json
 from collections import Counter
 
+from django.contrib.auth import get_user_model
 from django.core.management import BaseCommand
+from django.db import ProgrammingError
 
 from evaluation_registry.evaluations.models import (
     Department,
@@ -16,6 +18,11 @@ from evaluation_registry.evaluations.models import (
     Report,
 )
 
+try:
+    USER, _ = get_user_model().objects.get_or_create(email="i-dot-ai-team@cabinetoffice.gov.uk")
+except ProgrammingError:
+    USER = None
+
 
 def parse_row(text):
     return json.loads(f"[{text}]")
@@ -470,6 +477,8 @@ class Command(BaseCommand):
             header, *rows = map(parse_row, f)
             records = [dict(zip(header, row)) for row in rows]
 
+        Evaluation.objects.filter(created_by=USER).delete()
+
         counts = Counter(x["Evaluation ID"] for x in records)
         simple_evaluation_ids = {evaluation_id for evaluation_id, count in counts.items() if count == 1}
 
@@ -493,6 +502,7 @@ class Command(BaseCommand):
                 "N",
             )
             evaluation = Evaluation.objects.create(
+                created_by=USER,
                 rsm_evaluation_id=simple_evaluation_id,
                 title=record["Evaluation title"],
                 brief_description=record["Evaluation summary"],
diff --git a/evaluation_registry/evaluations/migrations/0005_rsmfile.py b/evaluation_registry/evaluations/migrations/0005_rsmfile.py
new file mode 100644
index 0000000..455a4e5
--- /dev/null
+++ b/evaluation_registry/evaluations/migrations/0005_rsmfile.py
@@ -0,0 +1,27 @@
+# Generated by Django 4.2.7 on 2023-11-16 14:19
+
+import uuid
+
+from django.db import migrations, models
+
+
+class Migration(migrations.Migration):
+    dependencies = [
+        ("evaluations", "0004_populate_designtype"),
+    ]
+
+    operations = [
+        migrations.CreateModel(
+            name="RSMFile",
+            fields=[
+                ("id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
+                ("created_at", models.DateTimeField(auto_now_add=True)),
+                ("modified_at", models.DateTimeField(auto_now=True)),
+                ("csv", models.FileField(upload_to="rsm_csv_files/")),
+                ("last_successfully_loaded_at", models.DateTimeField(null=True)),
+            ],
+            options={
+                "abstract": False,
+            },
+        ),
+    ]
diff --git a/evaluation_registry/evaluations/models.py b/evaluation_registry/evaluations/models.py
index 33ee5bd..221bd7f 100644
--- a/evaluation_registry/evaluations/models.py
+++ b/evaluation_registry/evaluations/models.py
@@ -236,3 +236,10 @@ class EventDate(TimeStampedModel):
         if self.month:
             return f"{calendar.month_name[self.month]} {self.year}"
         return f"{self.year}"
+
+
+class RSMFile(TimeStampedModel):
+    """raw RSM data files"""
+
+    csv = models.FileField(upload_to="rsm_csv_files/")
+    last_successfully_loaded_at = models.DateTimeField(null=True)
