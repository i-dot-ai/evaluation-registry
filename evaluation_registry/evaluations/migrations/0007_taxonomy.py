# Generated by Django 4.2.7 on 2023-11-21 15:45
import json
import os
import uuid

import django.db.models.deletion
from django.db import migrations, models

with open(os.path.join(os.path.dirname(os.path.abspath(__file__)), "taxonomies.csv")) as f:
    rows = [json.loads(f"[{row}]") for row in f.readlines()]
    TAXONOMIES = rows[1:]


def populate_taxonomy_model(apps, schema_editor):
    Taxonomy = apps.get_model("evaluations", "Taxonomy")

    for code, display, parent in TAXONOMIES:
        Taxonomy.objects.get_or_create(
            code=code.replace("https://www.gov.uk/api/content/", ""),
            display=display,
        )


def update_taxonomy_parents(apps, schema_editor):
    Taxonomy = apps.get_model("evaluations", "Taxonomy")

    for code, _, parent in TAXONOMIES:
        if parent:
            parent_instance = Taxonomy.objects.get(code=parent.replace("https://www.gov.uk/api/content/", ""))

            Taxonomy.objects.filter(code=code).update(
                parent=parent_instance,
            )


class Migration(migrations.Migration):
    dependencies = [
        ("evaluations", "0006_alter_evaluation_title_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="Taxonomy",
            fields=[
                ("id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                (
                    "code",
                    models.SlugField(
                        help_text="unique identifier, containing only letters, numbers, underscores or hyphens",
                        max_length=128,
                        unique=True,
                    ),
                ),
                ("display", models.CharField(help_text="display name", max_length=512)),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="children",
                        to="evaluations.taxonomy",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.RunPython(populate_taxonomy_model, reverse_code=migrations.RunPython.noop),
        migrations.RunPython(update_taxonomy_parents, reverse_code=migrations.RunPython.noop),
    ]
